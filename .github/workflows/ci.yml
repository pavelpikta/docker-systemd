---
name: Docker Images CI

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * 1"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v1.6.0
        with:
          dockerfile: "*dockerfile"
          recursive: true
          failure-threshold: error

  test:
    name: Test - ${{ matrix.os }}
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        os:
          - centos7
          - ubuntu-18.04
          - ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Test building image
        run: docker build -t docker-${{ matrix.os }} -f ${{ matrix.os }}.dockerfile .

      - name: Run the built image
        run: docker run --name test-container -d --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro docker-${{ matrix.os }}

      - name: Verify the built image
        run: docker exec --tty test-container env TERM=xterm systemctl --version

  build:
    if: github.ref == 'refs/heads/main'
    needs: test
    name: Build - ${{ matrix.os }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        os:
          - centos7
          - ubuntu-18.04
          - ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v1.14.1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3.6.2
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2.9.0
        with:
          context: ./
          file: ${{ matrix.os }}.dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.os }}:latest
          labels: ${{ steps.meta.outputs.labels }}
